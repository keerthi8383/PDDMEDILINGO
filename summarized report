package com.saveetha.medilingo

import android.annotation.SuppressLint
import android.graphics.ImageDecoder
import android.net.Uri
import android.os.Build
import android.os.Bundle
import android.provider.MediaStore
import android.widget.Button
import android.widget.ImageView
import android.widget.Toast
import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import com.google.mlkit.vision.common.InputImage
import com.google.mlkit.vision.text.TextRecognition
import com.google.mlkit.vision.text.latin.TextRecognizerOptions

class GenerateSummary : AppCompatActivity() {
    private lateinit var imageView: ImageView
    private lateinit var generateSummaryBtn: Button
    private var imageUri: Uri? = null

    @SuppressLint("WrongThread", "MissingInflatedId")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_generate_summary)

        imageView = findViewById(R.id.capturedImage)
        generateSummaryBtn = findViewById(R.id.generateSummary) // ✅ Correct button id

        val imageUriString = intent.getStringExtra("imageUri")
        if (imageUriString != null) {
            imageUri = Uri.parse(imageUriString)
            try {
                val bitmap = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
                    val source = ImageDecoder.createSource(contentResolver, imageUri!!)
                    ImageDecoder.decodeBitmap(source)
                } else {
                    @Suppress("DEPRECATION")
                    MediaStore.Images.Media.getBitmap(contentResolver, imageUri)
                }
                imageView.setImageBitmap(bitmap)
            } catch (e: Exception) {
                Toast.makeText(this, "Failed to load image", Toast.LENGTH_SHORT).show()
                e.printStackTrace()
            }
        } else {
            Toast.makeText(this, "No image received", Toast.LENGTH_SHORT).show()
        }

        generateSummaryBtn.setOnClickListener {
            if (imageUri != null) {
                extractAndSummarizeText(imageUri!!)
            } else {
                Toast.makeText(this, "No image to process", Toast.LENGTH_SHORT).show()
            }
        }
    }

    private fun extractAndSummarizeText(uri: Uri) {
        val image = InputImage.fromFilePath(this, uri)
        val recognizer = TextRecognition.getClient(TextRecognizerOptions.DEFAULT_OPTIONS)

        recognizer.process(image)
            .addOnSuccessListener { visionText ->
                val extractedText = visionText.text

                // Simple summarization (for demo) → first 200 chars
                val summary = if (extractedText.length > 200) {
                    extractedText.substring(0, 200) + "..."
                } else {
                    extractedText
                }

                // Open SummarizedReport Activity
                val intent = Intent(this, Summarizedreport::class.java)
                intent.putExtra("summary", summary)
                startActivity(intent)
            }
            .addOnFailureListener { e ->
                Toast.makeText(this, "Text extraction failed", Toast.LENGTH_SHORT).show()
                e.printStackTrace()
            }
    }
} 
